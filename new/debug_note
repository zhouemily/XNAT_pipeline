#brew install pyenv
On Linux or other systems, follow the instructions from the pyenv GitHub repository.
Install the desired Python version: Once pyenv is installed, you can list the available Python versions:


#pyenv install --list
Choose the version you want, then install it with:

#pyenv install x.x.x  # Replace x.x.x with the desired Python version, e.g., 3.9.5
Set the global or local Python version: After installing the desired version, you can set it as the global version or for a specific project:

To set the global version:

#pyenv global x.x.x  # Replace x.x.x with the desired Python version
To set the local version for a specific project:

#pyenv local x.x.x  # Replace x.x.x with the desired Python version
Using Official Python Installers:
Alternatively, you can download and install the older version directly from the Python website. However, managing multiple versions might be more cumbersome without a tool like pyenv.

Keep in mind that maintaining multiple Python versions may lead to conflicts or complexities, so using a virtual environment for projects with different Python requirements might be beneficial.


2. how to use pyenv and install needed modules
Once you've installed pyenv and the desired Python version, you can manage modules using the specific Python version managed by pyenv. Here's how:

Using pyenv with Modules:
Activate the pyenv Python version:


#pyenv global x.x.x  # Set the desired Python version globally
Alternatively, you can set the version locally for a specific project:


#pyenv local x.x.x  # Set the desired Python version locally
Install modules using pip:
With the desired Python version active, use pip to install the required modules:


#pip install module_name
Replace module_name with the name of the module you want to install. For instance:


#pip install requests  # Installs the 'requests' module
Create and use virtual environments:
It's a good practice to create a virtual environment for each project to manage dependencies separately. After activating the desired Python version with pyenv, create a virtual environment:

#python -m venv myenv  # Replace 'myenv' with your preferred environment name
Activate the virtual environment:

On Unix or MacOS:

#source myenv/bin/activate
On Windows:
#myenv\Scripts\activate
Now, any modules you install using pip will be specific to this virtual environment and won't affect other projects or the system-wide Python installation.

Remember, pyenv helps manage different Python versions, but virtual environments (venv, virtualenv, etc.) help isolate dependencies for individual projects. Combining these tools allows you to have multiple Python versions and manage modules efficiently across various projects.


3 what is pyenv global or local , how does it work, show examples
pyenv allows you to set a global Python version that applies system-wide or set a local version specific to a directory or project. Here are examples of pyenv global and pyenv local:

pyenv global:
Setting a Global Python Version:

#pyenv global 3.9.5
This command sets Python 3.9.5 as the global version. Any shell session on your system will use this version unless overridden by a pyenv local setting or manually selecting a version.

Checking the Global Python Version:
To verify the global Python version:

#pyenv global
This will display the currently set global Python version.

#pyenv local:
Setting a Local Python Version:
Change to the directory where you want to set a specific Python version, then execute:


#pyenv local 3.8.11
This command sets Python 3.8.11 as the version specifically for the current directory and its subdirectories. It creates a .python-version file in the directory, storing the Python version information.

Checking the Local Python Version:
To check the Python version set locally in a directory:

#pyenv local
This command displays the Python version set specifically for that directory.

Example Scenario:
Let's say you have Python 3.9.5 installed globally but need Python 3.8.11 for a specific project.

Set Global Version:

#pyenv global 3.9.5
Now, Python 3.9.5 is used system-wide.

Navigate to Your Project Directory:


#cd /path/to/your/project
Set Local Version for the Project:

#pyenv local 3.8.11
Python 3.8.11 is now the version used only within this project directory and its subdirectories.

Verify Versions:

To verify the global version: pyenv global
To verify the local version in the project directory: pyenv local
Using pyenv global and pyenv local, you can manage different Python versions easily across your system and specific projects without conflicting dependencies.


=====================================================
here's a concise summary document on using pyenv and managing Python versions:

Managing Python Versions with pyenv
1. Installation:
Homebrew (macOS):

#brew install pyenv
Other systems: Follow instructions from the pyenv GitHub repository.
2. Setting Global Python Version:
Command:

#pyenv global x.x.x  # Set a specific Python version globally
Usage:
Applies system-wide for all shell sessions.
Example: pyenv global 3.9.5
3. Setting Local Python Version:
Command:

pyenv local x.x.x  # Set a specific Python version locally for a directory
Usage:
Sets a version specific to a directory and its subdirectories.
Creates a .python-version file in the directory.
Example: pyenv local 3.8.11
4. Managing Python Modules:
Install modules with pip:

#pip install package_name  # Install a Python package
Use virtual environments:
Create: python -m venv myenv
Activate: source myenv/bin/activate (Unix/MacOS) or myenv\Scripts\activate (Windows)
5. Verifying Python Versions:
Check current global version:

#pyenv global  # Check current global Python version
Check local version in a directory:

#pyenv local  # Check Python version set locally in a directory
Example Workflow:
Global Version Setup:

Set a default Python version for the system:

#pyenv global 3.9.5
Local Version for a Project:

Navigate to project directory:

#cd /path/to/your/project
Set Python version specific to this project:

#pyenv local 3.8.11
Verify Versions:

Check global version:

#pyenv global
Check local version in the project directory:
#pyenv local
This summary provides a quick guide on using pyenv to manage Python versions globally and locally, as well as basic commands for handling modules and verifying version settings. Adjust the version numbers and package names according to your requirements.

==========================================================================

Error logs shown 
from . import py3k
  File "/usr/local/lib/python3.11/site-packages/numpy/compat/py3k.py", line 21, in <module>
    from pathlib import Path
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/collections/__init__.py)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/emilyzhou/Desktop/uiuc/XNAT/./run.py", line 11, in <module>
    import numpy as np
  File "/usr/local/lib/python3.11/site-packages/numpy/__init__.py", line 135, in <module>
    raise ImportError(msg) from e
ImportError: Error importing numpy: you should not try to import numpy from
        its source directory; please exit the numpy source tree, and relaunch
        your python interpreter from there.
+ ./xnat_send.py
Traceback (most recent call last):
  File "/Users/emilyzhou/Desktop/uiuc/XNAT/./xnat_send.py", line 4, in <module>
    import xnat
  File "/usr/local/lib/python3.10/site-packages/xnat/__init__.py", line 35, in <module>
    import requests
  File "/usr/local/lib/python3.10/site-packages/requests/__init__.py", line 147, in <module>
    from . import packages, utils
  File "/usr/local/lib/python3.10/site-packages/requests/utils.py", line 19, in <module>
    import zipfile
  File "/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/zipfile.py", line 19, in <module>
    import pathlib
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/collections/__init__.py)
emilyzhou@Emilys-MacBook-Pro-69 XNAT % vi run.sh
emilyzhou@Emilys-MacBook-Pro-69 XNAT % ./run.sh
+ . /Users/emilyzhou/.bashrc
++ export PYTHONPATH=/usr/local/lib/python3.11/site-packages:/usr/local/lib/python3.10/site-packages
++ PYTHONPATH=/usr/local/lib/python3.11/site-packages:/usr/local/lib/python3.10/site-packages
+ cat /Users/emilyzhou/.bashrc
export PYTHONPATH=/usr/local/lib/python3.11/site-packages:/usr/local/lib/python3.10/site-packages
+ ./run.py -i CUPS.log -d path
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/numpy/__init__.py", line 130, in <module>
    from numpy.__config__ import show as show_config
  File "/usr/local/lib/python3.11/site-packages/numpy/__config__.py", line 4, in <module>
    from numpy.core._multiarray_umath import (
  File "/usr/local/lib/python3.11/site-packages/numpy/core/__init__.py", line 72, in <module>
    from . import numerictypes as nt
  File "/usr/local/lib/python3.11/site-packages/numpy/core/numerictypes.py", line 105, in <module>
    from ._type_aliases import (
  File "/usr/local/lib/python3.11/site-packages/numpy/core/_type_aliases.py", line 20, in <module>
    from numpy.compat import unicode
  File "/usr/local/lib/python3.11/site-packages/numpy/compat/__init__.py", line 14, in <module>
    from . import py3k
  File "/usr/local/lib/python3.11/site-packages/numpy/compat/py3k.py", line 21, in <module>
    from pathlib import Path
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/collections/__init__.py)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/emilyzhou/Desktop/uiuc/XNAT/./run.py", line 11, in <module>
    import numpy as np
  File "/usr/local/lib/python3.11/site-packages/numpy/__init__.py", line 135, in <module>
    raise ImportError(msg) from e
ImportError: Error importing numpy: you should not try to import numpy from
        its source directory; please exit the numpy source tree, and relaunch
        your python interpreter from there.
+ ./pyxnat_send.py
Traceback (most recent call last):
  File "/Users/emilyzhou/Desktop/uiuc/XNAT/./pyxnat_send.py", line 4, in <module>
    import pyxnat
  File "/usr/local/lib/python3.10/site-packages/pyxnat/__init__.py", line 13, in <module>
    from .core import Interface
  File "/usr/local/lib/python3.10/site-packages/pyxnat/core/__init__.py", line 1, in <module>
    from .interfaces import Interface
  File "/usr/local/lib/python3.10/site-packages/pyxnat/core/interfaces.py", line 5, in <module>
    import requests
  File "/usr/local/lib/python3.10/site-packages/requests/__init__.py", line 147, in <module>
    from . import packages, utils
  File "/usr/local/lib/python3.10/site-packages/requests/utils.py", line 19, in <module>
    import zipfile
  File "/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/zipfile.py", line 19, in <module>
    import pathlib
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/collections/__init__.py)
emilyzhou@Emilys-MacBook-Pro-69 XNAT % pip install pyxnat
Traceback (most recent call last):
  File "/usr/local/bin/pip", line 5, in <module>
    from pip._internal.cli.main import main
  File "/usr/local/lib/python3.11/site-packages/pip/_internal/cli/main.py", line 10, in <module>
    from pip._internal.cli.autocompletion import autocomplete
  File "/usr/local/lib/python3.11/site-packages/pip/_internal/cli/autocompletion.py", line 10, in <module>
    from pip._internal.cli.main_parser import create_main_parser
  File "/usr/local/lib/python3.11/site-packages/pip/_internal/cli/main_parser.py", line 9, in <module>
    from pip._internal.build_env import get_runnable_pip
  File "/usr/local/lib/python3.11/site-packages/pip/_internal/build_env.py", line 6, in <module>
    import pathlib
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.10/3.10.13_1/Frameworks/Python.framework/Versions/3.10/lib/python3.10/collections/__init__.py)
emilyzhou@Emilys-MacBook-Pro-69 XNAT % ./cpsh
+ pwd
/Users/emilyzhou/Desktop/uiuc/XNAT
+ ls /Users/emilyzhou/Downloads/pyxnat_send.py
/Users/emilyzhou/Downloads/pyxnat_send.py
+ cp '/Users/emilyzhou/Down*/run_xnat*.sh' .
cp: /Users/emilyzhou/Down*/run_xnat*.sh: No such file or directory
+ cp '/Users/emilyzhou/Down*/XNAT_file_pipeline.py' .
cp: /Users/emilyzhou/Down*/XNAT_file_pipeline.py: No such file or directory
+ cp '/Users/emilyzhou/Down*/test_dcm.py' .
cp: /Users/emilyzhou/Down*/test_dcm.py: No such file or directory
+ cp '/Users/emilyzhou/Down*/weasis.sh' .
cp: /Users/emilyzhou/Down*/weasis.sh: No such file or directory
+ cp '/Users/emilyzhou/Down*/session.py' .
cp: /Users/emilyzhou/Down*/session.py: No such file or directory
+ cp '/Users/emilyzhou/Down*/run.py' .
cp: /Users/emilyzhou/Down*/run.py: No such file or directory
+ cp /Users/emilyzhou/Downloads/pyxnat_send.py .
+ chmod +x CUPS.DCM.zip CUPS.log CUPS_003_005.zip XNAT_file_pipeline.py XNAT_pipeline cleansh cpsh dcm_dir pyxnat_send.py r run.py run.sh run_test.sh run_xnat_pipeline.sh sample.dicom send_dcm.py session.py test11302023.log test_dcm.py testlog weasis.sh xnat_send.py
emilyzhou@Emilys-MacBook-Pro-69 XNAT % ls pyxnat*
pyxnat_send.py
emilyzhou@Emilys-MacBook-Pro-69 XNAT % ./pyxnat.py
zsh: no such file or directory: ./pyxnat.py
emilyzhou@Emilys-MacBook-Pro-69 XNAT % ./pyxnat_send.py
Traceback (most recent call last):
  File "/Users/emilyzhou/Desktop/uiuc/XNAT/./pyxnat_send.py", line 4, in <module>
    import pyxnat
  File "/usr/local/lib/python3.10/site-packages/pyxnat/__init__.py", line 13, in <module>
    from .core import Interface
  File "/usr/local/lib/python3.10/site-packages/pyxnat/core/__init__.py", line 1, in <module>
    from .interfaces import Interface
  File "/usr/local/lib/python3.10/site-packages/pyxnat/core/interfaces.py", line 5, in <module>
    import requests
  File "/usr/local/lib/python3.10/site-packages/requests/__init__.py", line 147, in <module>
    from . import packages, utils
  File "/usr/local/lib/python3.10/site-packages/requests/utils.py", line 19, in <module>
    import zipfile
  File "/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/zipfile.py", line 19, in <module>
    import pathlib
  File "/usr/local/lib/python3.10/site-packages/pathlib.py", line 10, in <module>
    from collections import Sequence
ImportError: cannot import name 'Sequence' from 'collections' (/usr/local/Cellar/python@3.11/3.11.6_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/collections/__init__.py)
emilyzhou@Emilys-MacBook-Pro-69 XNAT % which pip     
/usr/local/bin/pip
emilyzhou@Emilys-MacBook-Pro-69 XNAT % which python
/usr/local/bin/python
emilyzhou@Emilys-MacBook-Pro-69 XNAT % python3.9 -m venv myenv
source myenv/bin/activate

zsh: command not found: python3.9
source: no such file or directory: myenv/bin/activate
emilyzhou@Emilys-MacBook-Pro-69 XNAT % bash

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
bash-3.2$ python -V
Python 3.11.6
bash-3.2$ wich python
bash: wich: command not found
bash-3.2$ which python
/usr/local/bin/python
bash-3.2$ ls /usr/bin/python
ls: /usr/bin/python: No such file or directory
bash-3.2$ brew install pyenv
Running `brew update --auto-update`...
==> Auto-updated Homebrew!
Updated 2 taps (homebrew/core and homebrew/cask).
==> New Formulae
cidr                               ocaml@4                            solo2-cli
==> New Casks
amie

You have 11 outdated formulae installed.

==> Downloading https://ghcr.io/v2/homebrew/core/pyenv/manifests/2.3.33
################################################################################################## 100.0%
==> Fetching dependencies for pyenv: m4, autoconf, openssl@3, pkg-config and readline
==> Downloading https://ghcr.io/v2/homebrew/core/m4/manifests/1.4.19
################################################################################################## 100.0%
==> Fetching m4
==> Downloading https://ghcr.io/v2/homebrew/core/m4/blobs/sha256:0c7707d23c005fb7cfae158c696f3173698feca3
################################################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/autoconf/manifests/2.71
################################################################################################## 100.0%
==> Fetching autoconf
==> Downloading https://ghcr.io/v2/homebrew/core/autoconf/blobs/sha256:e4f6fbea9807075da1452887f2ce0468e4
################################################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/openssl/3/manifests/3.2.0
################################################################################################## 100.0%
==> Fetching openssl@3
==> Downloading https://ghcr.io/v2/homebrew/core/openssl/3/blobs/sha256:1ce5820558089a64336cf62f55d89ad32
################################################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/pkg-config/manifests/0.29.2_3
################################################################################################## 100.0%
==> Fetching pkg-config
==> Downloading https://ghcr.io/v2/homebrew/core/pkg-config/blobs/sha256:c44b1544815518726d280d92d6f6df09
################################################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/readline/manifests/8.2.7
################################################################################################## 100.0%
==> Fetching readline
==> Downloading https://ghcr.io/v2/homebrew/core/readline/blobs/sha256:65951f699eed34b0ae5d612b88bed9a5e2
################################################################################################## 100.0%
==> Fetching pyenv
==> Downloading https://ghcr.io/v2/homebrew/core/pyenv/blobs/sha256:77353eb9317d8a9b1071c1f6a5348b3293cfd
################################################################################################## 100.0%
==> Installing dependencies for pyenv: m4, autoconf, openssl@3, pkg-config and readline
==> Installing pyenv dependency: m4
==> Downloading https://ghcr.io/v2/homebrew/core/m4/manifests/1.4.19
Already downloaded: /Users/emilyzhou/Library/Caches/Homebrew/downloads/5b2a7f715487b7377e409e8ca58569040cd89f33859f691210c58d94410fd33b--m4-1.4.19.bottle_manifest.json
==> Pouring m4--1.4.19.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/m4/1.4.19: 13 files, 740.2KB
==> Installing pyenv dependency: autoconf
==> Downloading https://ghcr.io/v2/homebrew/core/autoconf/manifests/2.71
Already downloaded: /Users/emilyzhou/Library/Caches/Homebrew/downloads/057cde2b686872aeeff2e91dc36d037807d7342dd50929fbdfea8bcc572fbed0--autoconf-2.71.bottle_manifest.json
==> Pouring autoconf--2.71.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/autoconf/2.71: 71 files, 3.2MB
==> Installing pyenv dependency: openssl@3
==> Downloading https://ghcr.io/v2/homebrew/core/openssl/3/manifests/3.2.0
Already downloaded: /Users/emilyzhou/Library/Caches/Homebrew/downloads/f4198e1c20f075acafccf58da7f0da06963e40006c4c127cbc667a85750039df--openssl@3-3.2.0.bottle_manifest.json
==> Pouring openssl@3--3.2.0.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/openssl@3/3.2.0: 6,805 files, 32.4MB
==> Installing pyenv dependency: pkg-config
==> Downloading https://ghcr.io/v2/homebrew/core/pkg-config/manifests/0.29.2_3
Already downloaded: /Users/emilyzhou/Library/Caches/Homebrew/downloads/ac691fc7ab8ecffba32a837e7197101d271474a3a84cfddcc30c9fd6763ab3c6--pkg-config-0.29.2_3.bottle_manifest.json
==> Pouring pkg-config--0.29.2_3.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/pkg-config/0.29.2_3: 11 files, 656KB
==> Installing pyenv dependency: readline
==> Downloading https://ghcr.io/v2/homebrew/core/readline/manifests/8.2.7
Already downloaded: /Users/emilyzhou/Library/Caches/Homebrew/downloads/14125f7fa4b49853f76160b864f58379d90e52833ffeb8bd0643609bcd7f02a7--readline-8.2.7.bottle_manifest.json
==> Pouring readline--8.2.7.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/readline/8.2.7: 50 files, 1.7MB
==> Installing pyenv
==> Pouring pyenv--2.3.33.ventura.bottle.tar.gz
🍺  /usr/local/Cellar/pyenv/2.3.33: 1,130 files, 3.4MB
==> Running `brew cleanup pyenv`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
==> Upgrading 1 dependent of upgraded formulae:
Disable this behaviour by setting HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
sqlite 3.44.0 -> 3.44.2
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/manifests/3.44.2
################################################################################################## 100.0%
==> Checking for dependents of upgraded formulae...
==> No broken dependents found!
bash-3.2$ pyenv install --list
Available versions:
  2.1.3
  2.2.3
  2.3.7
  2.4.0
  2.4.1
  2.4.2
  2.4.3
  2.4.4
  2.4.5
  2.4.6
  2.5.0
  2.5.1
  2.5.2
  2.5.3
  2.5.4
  2.5.5
  2.5.6
  2.6.0
  2.6.1
  2.6.2
  2.6.3
  2.6.4
  2.6.5
  2.6.6
  2.6.7
  2.6.8
  2.6.9
  2.7.0
  2.7-dev
  2.7.1
  2.7.2
  2.7.3
  2.7.4
  2.7.5
  2.7.6
  2.7.7
  2.7.8
  2.7.9
  2.7.10
  2.7.11
  2.7.12
  2.7.13
  2.7.14
  2.7.15
  2.7.16
  2.7.17
  2.7.18
  3.0.1
  3.1.0
  3.1.1
  3.1.2
  3.1.3
  3.1.4
  3.1.5
  3.2.0
  3.2.1
  3.2.2
  3.2.3
  3.2.4
  3.2.5
  3.2.6
  3.3.0
  3.3.1
  3.3.2
  3.3.3
  3.3.4
  3.3.5
  3.3.6
  3.3.7
  3.4.0
  3.4-dev
  3.4.1
  3.4.2
  3.4.3
  3.4.4
  3.4.5
  3.4.6
  3.4.7
  3.4.8
  3.4.9
  3.4.10
  3.5.0
  3.5-dev
  3.5.1
  3.5.2
  3.5.3
  3.5.4
  3.5.5
  3.5.6
  3.5.7
  3.5.8
  3.5.9
  3.5.10
  3.6.0
  3.6-dev
  3.6.1
  3.6.2
  3.6.3
  3.6.4
  3.6.5
  3.6.6
  3.6.7
  3.6.8
  3.6.9
  3.6.10
  3.6.11
  3.6.12
  3.6.13
  3.6.14
  3.6.15
  3.7.0
  3.7-dev
  3.7.1
  3.7.2
  3.7.3
  3.7.4
  3.7.5
  3.7.6
  3.7.7
  3.7.8
  3.7.9
  3.7.10
  3.7.11
  3.7.12
  3.7.13
  3.7.14
  3.7.15
  3.7.16
  3.7.17
  3.8.0
  3.8-dev
  3.8.1
  3.8.2
  3.8.3
  3.8.4
  3.8.5
  3.8.6
  3.8.7
  3.8.8
  3.8.9
  3.8.10
  3.8.11
  3.8.12
  3.8.13
  3.8.14
  3.8.15
  3.8.16
  3.8.17
  3.8.18
  3.9.0
  3.9-dev
  3.9.1
  3.9.2
  3.9.4
  3.9.5
  3.9.6
  3.9.7
  3.9.8
  3.9.9
  3.9.10
  3.9.11
  3.9.12
  3.9.13
  3.9.14
  3.9.15
  3.9.16
  3.9.17
  3.9.18
  3.10.0
  3.10-dev
  3.10.1
  3.10.2
  3.10.3
  3.10.4
  3.10.5
  3.10.6
  3.10.7
  3.10.8
  3.10.9
  3.10.10
  3.10.11
  3.10.12
  3.10.13
  3.11.0
  3.11-dev
  3.11.1
  3.11.2
  3.11.3
  3.11.4
  3.11.5
  3.11.6
  3.12.0
  3.12-dev
  3.13.0a2
  3.13-dev
  activepython-2.7.14
  activepython-3.5.4
  activepython-3.6.0
  anaconda-1.4.0
  anaconda-1.5.0
  anaconda-1.5.1
  anaconda-1.6.0
  anaconda-1.6.1
  anaconda-1.7.0
  anaconda-1.8.0
  anaconda-1.9.0
  anaconda-1.9.1
  anaconda-1.9.2
  anaconda-2.0.0
  anaconda-2.0.1
  anaconda-2.1.0
  anaconda-2.2.0
  anaconda-2.3.0
  anaconda-2.4.0
  anaconda-4.0.0
  anaconda2-2.4.0
  anaconda2-2.4.1
  anaconda2-2.5.0
  anaconda2-4.0.0
  anaconda2-4.1.0
  anaconda2-4.1.1
  anaconda2-4.2.0
  anaconda2-4.3.0
  anaconda2-4.3.1
  anaconda2-4.4.0
  anaconda2-5.0.0
  anaconda2-5.0.1
  anaconda2-5.1.0
  anaconda2-5.2.0
  anaconda2-5.3.0
  anaconda2-5.3.1
  anaconda2-2018.12
  anaconda2-2019.03
  anaconda2-2019.07
  anaconda2-2019.10
  anaconda3-2.0.0
  anaconda3-2.0.1
  anaconda3-2.1.0
  anaconda3-2.2.0
  anaconda3-2.3.0
  anaconda3-2.4.0
  anaconda3-2.4.1
  anaconda3-2.5.0
  anaconda3-4.0.0
  anaconda3-4.1.0
  anaconda3-4.1.1
  anaconda3-4.2.0
  anaconda3-4.3.0
  anaconda3-4.3.1
  anaconda3-4.4.0
  anaconda3-5.0.0
  anaconda3-5.0.1
  anaconda3-5.1.0
  anaconda3-5.2.0
  anaconda3-5.3.0
  anaconda3-5.3.1
  anaconda3-2018.12
  anaconda3-2019.03
  anaconda3-2019.07
  anaconda3-2019.10
  anaconda3-2020.02
  anaconda3-2020.07
  anaconda3-2020.11
  anaconda3-2021.04
  anaconda3-2021.05
  anaconda3-2021.11
  anaconda3-2022.05
  anaconda3-2022.10
  anaconda3-2023.03-0
  anaconda3-2023.03
  anaconda3-2023.03-1
  anaconda3-2023.07-0
  anaconda3-2023.07-1
  anaconda3-2023.07-2
  anaconda3-2023.09-0
  cinder-3.8-dev
  cinder-3.10-dev
  graalpy-community-23.1.0
  graalpy-22.3.0
  graalpy-23.0.0
  graalpy-23.1.0
  graalpython-20.1.0
  graalpython-20.2.0
  graalpython-20.3.0
  graalpython-21.0.0
  graalpython-21.1.0
  graalpython-21.2.0
  graalpython-21.3.0
  graalpython-22.0.0
  graalpython-22.1.0
  graalpython-22.2.0
  ironpython-dev
  ironpython-2.7.4
  ironpython-2.7.5
  ironpython-2.7.6.3
  ironpython-2.7.7
  jython-dev
  jython-2.5.0
  jython-2.5-dev
  jython-2.5.1
  jython-2.5.2
  jython-2.5.3
  jython-2.5.4-rc1
  jython-2.7.0
  jython-2.7.1
  jython-2.7.2
  mambaforge-pypy3
  mambaforge
  mambaforge-4.10.1-4
  mambaforge-4.10.1-5
  mambaforge-4.10.2-0
  mambaforge-4.10.3-0
  mambaforge-4.10.3-1
  mambaforge-4.10.3-2
  mambaforge-4.10.3-3
  mambaforge-4.10.3-4
  mambaforge-4.10.3-5
  mambaforge-4.10.3-6
  mambaforge-4.10.3-7
  mambaforge-4.10.3-8
  mambaforge-4.10.3-9
  mambaforge-4.10.3-10
  mambaforge-4.11.0-0
  mambaforge-4.11.0-1
  mambaforge-4.11.0-2
  mambaforge-4.11.0-3
  mambaforge-4.11.0-4
  mambaforge-4.12.0-0
  mambaforge-4.12.0-1
  mambaforge-4.12.0-2
  mambaforge-4.12.0-3
  mambaforge-4.13.0-1
  mambaforge-4.14.0-0
  mambaforge-4.14.0-1
  mambaforge-4.14.0-2
  mambaforge-22.9.0-0
  mambaforge-22.9.0-1
  mambaforge-22.9.0-2
  mambaforge-22.9.0-3
  micropython-dev
  micropython-1.9.3
  micropython-1.9.4
  micropython-1.10
  micropython-1.11
  micropython-1.12
  micropython-1.13
  micropython-1.14
  micropython-1.15
  micropython-1.16
  micropython-1.17
  micropython-1.18
  micropython-1.19.1
  miniconda-latest
  miniconda-2.2.2
  miniconda-3.0.0
  miniconda-3.0.4
  miniconda-3.0.5
  miniconda-3.3.0
  miniconda-3.4.2
  miniconda-3.7.0
  miniconda-3.8.3
  miniconda-3.9.1
  miniconda-3.10.1
  miniconda-3.16.0
  miniconda-3.18.3
  miniconda2-latest
  miniconda2-2.7-4.8.3
  miniconda2-3.18.3
  miniconda2-3.19.0
  miniconda2-4.0.5
  miniconda2-4.1.11
  miniconda2-4.3.14
  miniconda2-4.3.21
  miniconda2-4.3.27
  miniconda2-4.3.30
  miniconda2-4.3.31
  miniconda2-4.4.10
  miniconda2-4.5.1
  miniconda2-4.5.4
  miniconda2-4.5.11
  miniconda2-4.5.12
  miniconda2-4.6.14
  miniconda2-4.7.10
  miniconda2-4.7.12
  miniconda3-latest
  miniconda3-2.2.2
  miniconda3-3.0.0
  miniconda3-3.0.4
  miniconda3-3.0.5
  miniconda3-3.3.0
  miniconda3-3.4.2
  miniconda3-3.7.0
  miniconda3-3.7-4.8.2
  miniconda3-3.7-4.8.3
  miniconda3-3.7-4.9.2
  miniconda3-3.7-4.10.1
  miniconda3-3.7-4.10.3
  miniconda3-3.7-4.11.0
  miniconda3-3.7-4.12.0
  miniconda3-3.7-22.11.1-1
  miniconda3-3.7-23.1.0-1
  miniconda3-3.8.3
  miniconda3-3.8-4.8.2
  miniconda3-3.8-4.8.3
  miniconda3-3.8-4.9.2
  miniconda3-3.8-4.10.1
  miniconda3-3.8-4.10.3
  miniconda3-3.8-4.11.0
  miniconda3-3.8-4.12.0
  miniconda3-3.8-22.11.1-1
  miniconda3-3.8-23.1.0-1
  miniconda3-3.8-23.3.1-0
  miniconda3-3.8-23.5.0-3
  miniconda3-3.8-23.5.1-0
  miniconda3-3.8-23.5.2-0
  miniconda3-3.8-23.9.0-0
  miniconda3-3.8-23.10.0-1
  miniconda3-3.9.1
  miniconda3-3.9-4.9.2
  miniconda3-3.9-4.10.1
  miniconda3-3.9-4.10.3
  miniconda3-3.9-4.11.0
  miniconda3-3.9-4.12.0
  miniconda3-3.9-22.11.1-1
  miniconda3-3.9-23.1.0-1
  miniconda3-3.9-23.3.1-0
  miniconda3-3.9-23.5.0-3
  miniconda3-3.9-23.5.1-0
  miniconda3-3.9-23.5.2-0
  miniconda3-3.9-23.9.0-0
  miniconda3-3.9-23.10.0-1
  miniconda3-3.10.1
  miniconda3-3.10-22.11.1-1
  miniconda3-3.10-23.1.0-1
  miniconda3-3.10-23.3.1-0
  miniconda3-3.10-23.5.0-3
  miniconda3-3.10-23.5.1-0
  miniconda3-3.10-23.5.2-0
  miniconda3-3.10-23.9.0-0
  miniconda3-3.10-23.10.0-1
  miniconda3-3.11-23.5.0-3
  miniconda3-3.11-23.5.1-0
  miniconda3-3.11-23.5.2-0
  miniconda3-3.11-23.9.0-0
  miniconda3-3.11-23.10.0-1
  miniconda3-3.16.0
  miniconda3-3.18.3
  miniconda3-3.19.0
  miniconda3-4.0.5
  miniconda3-4.1.11
  miniconda3-4.2.12
  miniconda3-4.3.11
  miniconda3-4.3.14
  miniconda3-4.3.21
  miniconda3-4.3.27
  miniconda3-4.3.30
  miniconda3-4.3.31
  miniconda3-4.4.10
  miniconda3-4.5.1
  miniconda3-4.5.4
  miniconda3-4.5.11
  miniconda3-4.5.12
  miniconda3-4.6.14
  miniconda3-4.7.10
  miniconda3-4.7.12
  miniforge-pypy3
  miniforge3-latest
  miniforge3-4.9.2
  miniforge3-4.10
  miniforge3-4.10.1-1
  miniforge3-4.10.1-3
  miniforge3-4.10.1-5
  miniforge3-4.10.2-0
  miniforge3-4.10.3-0
  miniforge3-4.10.3-1
  miniforge3-4.10.3-2
  miniforge3-4.10.3-3
  miniforge3-4.10.3-4
  miniforge3-4.10.3-5
  miniforge3-4.10.3-6
  miniforge3-4.10.3-7
  miniforge3-4.10.3-8
  miniforge3-4.10.3-9
  miniforge3-4.10.3-10
  miniforge3-4.11.0-0
  miniforge3-4.11.0-1
  miniforge3-4.11.0-2
  miniforge3-4.11.0-3
  miniforge3-4.11.0-4
  miniforge3-4.12.0-0
  miniforge3-4.12.0-1
  miniforge3-4.12.0-2
  miniforge3-4.12.0-3
  miniforge3-4.13.0-0
  miniforge3-4.13.0-1
  miniforge3-4.14.0-0
  miniforge3-4.14.0-1
  miniforge3-4.14.0-2
  miniforge3-22.9.0-0
  miniforge3-22.9.0-1
  miniforge3-22.9.0-2
  miniforge3-22.9.0-3
  miniforge3-22.11.1-4
  miniforge3-23.3.1-1
  nogil-3.9.10
  nogil-3.9.10-1
  pypy-c-jit-latest
  pypy-dev
  pypy-stm-2.3
  pypy-stm-2.5.1
  pypy-1.5-src
  pypy-1.6
  pypy-1.7
  pypy-1.8
  pypy-1.9
  pypy-2.0-src
  pypy-2.0
  pypy-2.0.1-src
  pypy-2.0.1
  pypy-2.0.2-src
  pypy-2.0.2
  pypy-2.1-src
  pypy-2.1
  pypy-2.2-src
  pypy-2.2
  pypy-2.2.1-src
  pypy-2.2.1
  pypy-2.3-src
  pypy-2.3
  pypy-2.3.1-src
  pypy-2.3.1
  pypy-2.4.0-src
  pypy-2.4.0
  pypy-2.5.0-src
  pypy-2.5.0
  pypy-2.5.1-src
  pypy-2.5.1
  pypy-2.6.0-src
  pypy-2.6.0
  pypy-2.6.1-src
  pypy-2.6.1
  pypy-4.0.0-src
  pypy-4.0.0
  pypy-4.0.1-src
  pypy-4.0.1
  pypy-5.0.0-src
  pypy-5.0.0
  pypy-5.0.1-src
  pypy-5.0.1
  pypy-5.1-src
  pypy-5.1
  pypy-5.1.1-src
  pypy-5.1.1
  pypy-5.3-src
  pypy-5.3
  pypy-5.3.1-src
  pypy-5.3.1
  pypy-5.4-src
  pypy-5.4
  pypy-5.4.1-src
  pypy-5.4.1
  pypy-5.6.0-src
  pypy-5.6.0
  pypy-5.7.0-src
  pypy-5.7.0
  pypy-5.7.1-src
  pypy-5.7.1
  pypy2-5.3-src
  pypy2-5.3
  pypy2-5.3.1-src
  pypy2-5.3.1
  pypy2-5.4-src
  pypy2-5.4
  pypy2-5.4.1-src
  pypy2-5.4.1
  pypy2-5.6.0-src
  pypy2-5.6.0
  pypy2-5.7.0-src
  pypy2-5.7.0
  pypy2-5.7.1-src
  pypy2-5.7.1
  pypy2.7-5.8.0-src
  pypy2.7-5.8.0
  pypy2.7-5.9.0-src
  pypy2.7-5.9.0
  pypy2.7-5.10.0-src
  pypy2.7-5.10.0
  pypy2.7-6.0.0-src
  pypy2.7-6.0.0
  pypy2.7-7.0.0-src
  pypy2.7-7.0.0
  pypy2.7-7.1.0-src
  pypy2.7-7.1.0
  pypy2.7-7.1.1-src
  pypy2.7-7.1.1
  pypy2.7-7.2.0-src
  pypy2.7-7.2.0
  pypy2.7-7.3.0-src
  pypy2.7-7.3.0
  pypy2.7-7.3.1-src
  pypy2.7-7.3.1
  pypy2.7-7.3.2-src
  pypy2.7-7.3.2
  pypy2.7-7.3.3-src
  pypy2.7-7.3.3
  pypy2.7-7.3.4-src
  pypy2.7-7.3.4
  pypy2.7-7.3.5-src
  pypy2.7-7.3.5
  pypy2.7-7.3.6-src
  pypy2.7-7.3.6
  pypy2.7-7.3.8-src
  pypy2.7-7.3.8
  pypy2.7-7.3.9-src
  pypy2.7-7.3.9
  pypy2.7-7.3.10-src
  pypy2.7-7.3.10
  pypy2.7-7.3.11-src
  pypy2.7-7.3.11
  pypy2.7-7.3.12-src
  pypy2.7-7.3.12
  pypy2.7-7.3.13-src
  pypy2.7-7.3.13
  pypy3-2.3.1-src
  pypy3-2.3.1
  pypy3-2.4.0-src
  pypy3-2.4.0
  pypy3.3-5.2-alpha1-src
  pypy3.3-5.2-alpha1
  pypy3.3-5.5-alpha-src
  pypy3.3-5.5-alpha
  pypy3.5-c-jit-latest
  pypy3.5-5.7-beta-src
  pypy3.5-5.7-beta
  pypy3.5-5.7.1-beta-src
  pypy3.5-5.7.1-beta
  pypy3.5-5.8.0-src
  pypy3.5-5.8.0
  pypy3.5-5.9.0-src
  pypy3.5-5.9.0
  pypy3.5-5.10.0-src
  pypy3.5-5.10.0
  pypy3.5-5.10.1-src
  pypy3.5-5.10.1
  pypy3.5-6.0.0-src
  pypy3.5-6.0.0
  pypy3.5-7.0.0-src
  pypy3.5-7.0.0
  pypy3.6-7.0.0-src
  pypy3.6-7.0.0
  pypy3.6-7.1.0-src
  pypy3.6-7.1.0
  pypy3.6-7.1.1-src
  pypy3.6-7.1.1
  pypy3.6-7.2.0-src
  pypy3.6-7.2.0
  pypy3.6-7.3.0-src
  pypy3.6-7.3.0
  pypy3.6-7.3.1-src
  pypy3.6-7.3.1
  pypy3.6-7.3.2-src
  pypy3.6-7.3.2
  pypy3.6-7.3.3-src
  pypy3.6-7.3.3
  pypy3.7-c-jit-latest
  pypy3.7-7.3.2-src
  pypy3.7-7.3.2
  pypy3.7-7.3.3-src
  pypy3.7-7.3.3
  pypy3.7-7.3.4-src
  pypy3.7-7.3.4
  pypy3.7-7.3.5-src
  pypy3.7-7.3.5
  pypy3.7-7.3.6-src
  pypy3.7-7.3.6
  pypy3.7-7.3.7-src
  pypy3.7-7.3.7
  pypy3.7-7.3.8-src
  pypy3.7-7.3.8
  pypy3.7-7.3.9-src
  pypy3.7-7.3.9
  pypy3.8-7.3.6-src
  pypy3.8-7.3.6
  pypy3.8-7.3.7-src
  pypy3.8-7.3.7
  pypy3.8-7.3.8-src
  pypy3.8-7.3.8
  pypy3.8-7.3.9-src
  pypy3.8-7.3.9
  pypy3.8-7.3.10-src
  pypy3.8-7.3.10
  pypy3.8-7.3.11-src
  pypy3.8-7.3.11
  pypy3.9-7.3.8-src
  pypy3.9-7.3.8
  pypy3.9-7.3.9-src
  pypy3.9-7.3.9
  pypy3.9-7.3.10-src
  pypy3.9-7.3.10
  pypy3.9-7.3.11-src
  pypy3.9-7.3.11
  pypy3.9-7.3.12-src
  pypy3.9-7.3.12
  pypy3.9-7.3.13-src
  pypy3.9-7.3.13
  pypy3.10-7.3.12-src
  pypy3.10-7.3.12
  pypy3.10-7.3.13-src
  pypy3.10-7.3.13
  pyston-2.2
  pyston-2.3
  pyston-2.3.1
  pyston-2.3.2
  pyston-2.3.3
  pyston-2.3.4
  pyston-2.3.5
  stackless-dev
  stackless-2.7-dev
  stackless-2.7.2
  stackless-2.7.3
  stackless-2.7.4
  stackless-2.7.5
  stackless-2.7.6
  stackless-2.7.7
  stackless-2.7.8
  stackless-2.7.9
  stackless-2.7.10
  stackless-2.7.11
  stackless-2.7.12
  stackless-2.7.14
  stackless-2.7.16
  stackless-3.2.2
  stackless-3.2.5
  stackless-3.3.5
  stackless-3.3.7
  stackless-3.4-dev
  stackless-3.4.2
  stackless-3.4.7
  stackless-3.5.4
  stackless-3.7.5
bash-3.2$ 
bash-3.2$ pyenv install 3.9.0
python-build: use openssl@1.1 from homebrew
python-build: use readline from homebrew
Downloading Python-3.9.0.tar.xz...
-> https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tar.xz
Installing Python-3.9.0...
patching file 'Misc/NEWS.d/next/Build/2021-10-11-16-27-38.bpo-45405.iSfdW5.rst'
patching file configure
patching file configure.ac
python-build: use readline from homebrew
python-build: use zlib from xcode sdk
Installed Python-3.9.0 to /Users/emilyzhou/.pyenv/versions/3.9.0
bash-3.2$ 
